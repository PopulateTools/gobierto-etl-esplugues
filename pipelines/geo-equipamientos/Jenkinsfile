email = "popu-servers+jenkins@populate.tools "
pipeline {
    agent any
    environment {
        WORKING_DIR = "/tmp/geo-equipamientos"
        PATH = "$HOME/.rbenv/shims:$PATH"
        ETL = "/var/www/gobierto-etl-espluges/current"
        ETL_UTILS = "/var/www/gobierto-etl-utils/current"
        // Variables that must be defined via Jenkins UI:
        // GOBIERTO_URL = "https://demo-datos.gobify.net"
        // YEAR
        // MONTH
        // SHORT_YEAR
    }
    stages {
        stage('Clean working dir') {
          steps {
            sh "cd ${ETL_UTILS}; bundle exec ruby operations/prepare-working-directory/run.rb ${WORKING_DIR}"
          }
        }
        stage('Download data') {
          steps {
            sh "cd ${ETL_UTILS}; bundle exec ruby operations/download/run.rb "
          }
        }
        stage('Extract > Process XLS file') {
          steps {
            sh "/home/ubuntu/.local/bin/sqlitebiter -o $WORKING_DIR/data.sqlite file $WORKING_DIR/data_raw.xlsx"
          }
        }
        stage('Extract > Parse transform template') {
          steps {
            sh "sed \"s/<YEAR>/${YEAR}/g\" $ETL/datasets/geo-equipamientos/transform_template.sql | sed \"s/<SHORT_YEAR>/${SHORT_YEAR}/g\" | sed \"s/<MONTH>/${MONTH}/g\" > ${WORKING_DIR}/transform.sql"
          }
        }
        stage('Transform > Apply transform queries') {
          steps {
            sh "cd ${ ETL_UTILS }; bundle exec ruby operations/apply-sqlite-transform/run.rb ${ WORKING_DIR }/transform.sql ${ WORKING_DIR }/data.sqlite"
          }
        }
        stage('Transform > Extract CSV from SQLite') {
          steps {
            sh "cd ${ ETL_UTILS }; bundle exec ruby operations/export-sqlite-csv/run.rb ${ WORKING_DIR }/data.sqlite ${ WORKING_DIR }/data.csv"
          }
        }
        stage('Load') {
          steps {
            sh '''#!/bin/bash
              source ${ETL}/.rbenv-vars;
              cd ${ETL_UTILS};
              bundle exec ruby operations/gobierto_data/upload-dataset/run.rb \
                    --api-token $GOBIERTO_API_TOKEN \
                    --gobierto-url ${GOBIERTO_URL} \
                    --name "Equipamientos" \
                    --slug "geo-equipamientos" \
                    --table-name "geo_equipamientos" \
                    --schema-path $ETL/datasets/geo-equipamientos/schema.json \
                    --file-path ${WORKING_DIR}/data.csv \
                    --append
            '''
          }
        }
    }
    post {
        failure {
            echo 'This will run only if failed'
            mail body: "Project: ${env.JOB_NAME} - Build Number: ${env.BUILD_NUMBER} - URL de build: ${env.BUILD_URL}",
                charset: 'UTF-8',
                subject: "ERROR CI: Project name -> ${env.JOB_NAME}",
                to: email
        }
    }
}
